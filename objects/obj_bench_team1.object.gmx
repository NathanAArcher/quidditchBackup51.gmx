<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bench_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize()

persona_name = "null"

if(global.host == 0){
    persona_name = "Waiting..."
}else{
    persona_name = steam_get_persona_name(); //steam username
    if(steam_get_persona_name() == ""){
        persona_name = "[Empty]"
    }
}

chaserCount = 0 //variables used to count positions in for loop
keeperCount = 0 //there are 3 chasers, 1 keeper, 2 beaters, and 1 seeker
beaterCount = 0
seekerCount = 0

ch_name = 1
st_speed = 1
st_power = 1
st_throw = 1
st_accuracy = 1
st_stamina = 1
st_catching = 1
st_grip = 1
st_gender = 0
//0 = other, 1 = female, 2 = male
st_position = 1
//1 = chaser, 2 = keeper, 3 = beater, 4 = seeker, 0 = utility
ch_hair = c_white

depth = x-y
bench_color = c_white
if(room == rm_alt){
    //bench_color = global.team1_color
}
if(room == rm_tutorial_alt){
    exit
}
bench_array[0] = -1
bench_color[0] = c_white
bench_sprites[0] = -1
self_id = 0
skin_array[0] = -1
sprite_head = 0
bench_ids[0] = -1
for(i = 0; i &lt; 14; i+= 1){ //fill initial list with empty spaces
    skin_array[i] = -1
    bench_sprites[i] = -1
    bench_id[i] = -1
}

if(global.host == 1){

    i = 0
    while(i &lt; 14){
        randomize()
        self_id = irandom(global.player_max-1)
        bench_id[i] = self_id
        scr_players() //set stats (and POSITION to whatever is at self_id.
                      //We want to generate a set of 7 players for each position
        duplicate = false
        for(k = 0; k &lt; i; k+= 1){
            if(bench_id[i] == bench_id[k]){
                duplicate = true
            }
        }
        if(duplicate == true){
            continue
        }
        if(st_position == 1){
            if(chaserCount &lt; 6){
                chaserCount += 1
            }else{
                //i -= 1;
                continue;
            }
        }
        if(st_position == 2){
            if(keeperCount &lt; 2){
                keeperCount += 1
            }else{
                //i -= 1;
                continue;
            }
        }
        if(st_position == 3){
            if(beaterCount &lt; 4){
                beaterCount += 1
            }else{
                //i -= 1;
                continue;
            }
        }
        if(st_position == 4){
            if(seekerCount &lt; 2){
                seekerCount += 1
            }else{
                //i -= 1;
                continue;
            }
        }
        scr_load_smallheads(self_id) //sets sprite head to self_id
        bench_sprites[i] = sprite_head
        
        scr_add_list(i, self_id, st_position) //adds to player's position list used to generate players on pitch and in strategy
        
        skin_array[i] = scr_getskin(-1)
        bench_color[i] = choose(global.team1_color, global.team2_color) //depending on wins/losses should have more of team1 color
        i += 1
    }
    
    for(i = 0; i &lt; 7; i += 1){
        //bench_sprites[i] = scr_load_smallheads(bench_array[i])
    }

}

depth = -y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
if(room == rm_tutorial_alt){
    exit
}
for(i = 0; i &lt; 7; i += 1){
    if(skin_array[i] != -1 and bench_sprites[i] != -1){ //if skin_array[i] == -1, then it should be an empty spot
        draw_sprite_ext(spr_audience_member_down_withshorts, -1, x+17*i+8, y-4, 1, 1, 0, global.team1_color_secondary, 1)
        draw_sprite_ext(spr_audience_member_down_shirt, -1, x+17*i+8, y-4, 1, 1, 0, global.team1_color, 1)
        draw_sprite_ext(spr_audience_member_down_skin_withshorts, -1, x+17*i+8, y-4, 1, 1, 0, skin_array[i], 1)
        scr_draw_smallheads_argument(bench_sprites[i], 6, x+17*i+8, y-4, 1, 1, 0, c_white, 1)
        //draw_sprite_ext(bench_sprites[i], 270, x+15*i+8, y-4, 1, 1, 0, c_white, 1)
    }
}
for(i = 7; i &lt; 14; i += 1){
    if(skin_array[i] != -1 and bench_sprites[i] != -1){
        draw_sprite_ext(spr_audience_member_down_withshorts, -1, x+17*(i-8)+16, y+12, 1, 1, 0, global.team1_color_secondary, 1)
        draw_sprite_ext(spr_audience_member_down_shirt, -1, x+17*(i-8)+16, y+12, 1, 1, 0, global.team1_color, 1)
        draw_sprite_ext(spr_audience_member_down_skin_withshorts, -1, x+17*(i-8)+16, y+12, 1, 1, 0, skin_array[i], 1)
        scr_draw_smallheads_argument(bench_sprites[i], 6, x+17*(i-8)+16, y+12, 1, 1, 0, c_white, 1)
        //draw_sprite_ext(bench_sprites[i], 270, x+15*(i-8)+16, y+12, 1, 1, 0, c_white, 1)
    }
}
draw_set_halign(fa_center)
draw_set_valign(fa_middle)
draw_text_with_double_outline(x+60, y-96, persona_name, fnt_title, global.team1_color, c_black, c_white)
draw_set_halign(fa_left)
draw_set_valign(fa_top)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
