<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_schedulebox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//9th 10th 11th and 12th games will be regionals
//13th 14th 15th and 16th games will be world cup

boxcount = 0

    for(i = 0; i &lt; 35; i += 1){
        boxcolor[i] = 1
        boxteam[i] = -1
        boxteamLogo[i] = -1
        boxteamLogoSecondary[i] = -1
        boxteamSecondaryColor[i] = -1
        boxteamPrimaryColor[i] = -1
    }

while(boxcount &lt; 12){
    for(i = 0; i &lt; 30 and boxcount &lt; 12; i += 1)
    {
        if random(1) &gt; .6{
            if boxcolor[i] != 2{
                boxcolor[i] = 2
                boxcount += 1
            }
        }
    }
}

q = 0;
for(i = 0; i &lt; 35; i += 1){
    if (q &lt; 8){
        if boxcolor[i] == 2{
            scr_random_name(global.scheduleList[q])
            
            /*global.team2_name = nameList[0, randomID]
            global.team2_color_secondary = nameList[2, randomID]
            global.team2_color = nameList[1, randomID]
            global.team2_logo = nameList[3, randomID]-1*/

            boxteam[i] = global.scheduleList[q]
            boxteamSecondaryColor[i] = global.team2_color_secondary
            boxteamPrimaryColor[i] = global.team2_color
            boxteamLogo[i] = sprite_add(working_directory+"\logos\logo"+string(global.team2_logo+1)+".png", 0, true, false, 84, 64)
            boxteamLogoSecondary[i] = sprite_add(working_directory+"\logos_secondary\logosecondary"+string(global.team2_logo+1)+".png", 0, true, false, 84, 64)   
            //show_message(string(global.scheduleList[x]) + ": Adding sprite: logo" + string(global.team2_logo)+".png")         
            q+= 1;
        }
    }
}

//show_message("Sprites added successfully")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>p = 0
q = 0 //game days count
//for(i = 0; i &lt; 7; i += 1){
//    for(j = 0; j &lt; 5; j += 1){
texture_set_interpolation(true)

draw_set_halign(fa_center)

for(j = 0; j &lt; 5; j += 1){ //j is rows of the calendar; the WEEK
    for(i = 0; i &lt; 7; i += 1){ //i is the columns of the calendar; the DAY
        if j == 0{
            draw_sprite(spr_schedulebox, 0, x+(81*i), y+(57*j))
        }
        draw_sprite(spr_schedulebox, boxcolor[(j*7)+i], x+(81*i), y+(57*j))
        if (boxcolor[(j*7)+i] == 2){
            if boxteamLogo[(j*7)+i] != -1{
                draw_sprite_ext(spr_schedulebox, 1, x+(81*i), y+(57*j), 1, 1, 0, boxteamPrimaryColor[(j*7)+i], 1)
                draw_sprite_ext(boxteamLogo[(j*7)+i], 1, x+(81*i)+40, y+(57*j)+36, .5, .5, 22, c_white, 1)
                draw_sprite_ext(boxteamLogoSecondary[(j*7)+i], 1, x+(81*i)+40, y+(57*j)+36, .5, .5, 22, boxteamSecondaryColor[(j*7)+i], 1)
            }else{
                if p &lt; 2{
                    draw_text_with_outline(x+(81*i)+40, y+(57*j)+36, "Regionals", fnt_card, c_blue, c_white)
                    if p == 0{
                        draw_text_with_outline(x+(81*i)+40, y+(57*j)+52, "Pool Play", fnt_card, c_blue, c_white)
                        if global.wins + global.losses &gt; 8{
                            for(k = 0; k &lt; global.wins+global.losses-8; k += 1){
                                if( k &lt; 4){ //make sure not to put wins and losses for bracket games here!
                                    if(global.winLossList[8+k] == 1){
                                        draw_text_with_double_outline(x+(81*i)+10+(k*16), y+(57*j)+16, "W", fnt_smalltitle, c_blue, c_white, c_gray)
                                    }else{
                                        draw_text_with_double_outline(x+(81*i)+10+(k*16), y+(57*j)+16, "L", fnt_smalltitle, c_red, c_white, c_gray)
                                    }
                                    //draw_sprite_ext(boxteamLogo[(j*7)+i], 1, x+(81*i)+40, y+(57*j)+36, .5, .5, 22, c_white, 1)
                                    //draw_sprite_ext(boxteamLogoSecondary[(j*7)+i], 1, x+(81*i)+40, y+(57*j)+36, .5, .5, 22, boxteamSecondaryColor[(j*7)+i], 1)
                                }
                            }                    
                        }
                        if global.wins + global.losses == 8{
                            draw_sprite_ext(spr_schedulecheck, 0, x+(81*i), y+(57*j), 1, 1, 0, c_white, 1)
                        }
                    }else{
                        draw_text_with_outline(x+(81*i)+40, y+(57*j)+52, "Bracket Play", fnt_card, c_blue, c_white)
                        if global.wins + global.losses &gt;= 12 and global.wins+global.losses+global.bracketGamesMissed &lt; 16{
                            draw_sprite_ext(spr_schedulecheck, 0, x+(81*i), y+(57*j), 1, 1, 0, c_white, 1)
                        }
                    }
                    p+= 1
                }else{
                    draw_text_with_outline(x+(81*i)+40, y+(57*j)+36, "World Cup", fnt_card, c_blue, c_white)
                    if p == 3{
                        draw_text_with_outline(x+(81*i)+40, y+(57*j)+52, "Pool Play", fnt_card, c_blue, c_white)
                    }else{
                        draw_text_with_outline(x+(81*i)+40, y+(57*j)+52, "Bracket Play", fnt_card, c_blue, c_white)
                    }
                }
            }
        }
    }
}

for(j = 0; j &lt; 5; j += 1){ //j is the rows of the calendar; the WEEK
    for(i = 0; i &lt; 7; i += 1){ //i is the columns of the calendar; the DAY
        if (boxcolor[(j*7)+i] == 2){
            if boxteamLogo[(j*7)+i] != -1{ //if the day is valid; e.g. there is or was a game on that day
            if global.wins + global.losses &gt; q{ //if the game has been played
                //draw_sprite_ext(spr_schedulecheck, 1, x+(81*i), y+(57*j), 1, 1, 0, c_white, 1)
                //if(i-1 &gt;= 0){ //to stop index out of bounds error
                    if(global.winLossList[q] == 1){
                        draw_text_with_double_outline(x+(81*i)+40, y+(57*j)+24, "W", fnt_title, c_blue, c_white, c_gray)
                    }else{
                        draw_text_with_double_outline(x+(81*i)+40, y+(57*j)+24, "L", fnt_title, c_red, c_white, c_gray)
                    }
                //}
            }
            if global.wins + global.losses == q{
                draw_sprite_ext(spr_schedulecheck, 0, x+(81*i), y+(57*j), 1, 1, 0, c_white, 1)
            }
            q+= 1
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
